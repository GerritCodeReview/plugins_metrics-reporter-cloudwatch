{
  "comments": [
    {
      "key": {
        "uuid": "39fc96c2_d8e22099",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-13T15:53:03Z",
      "side": 1,
      "message": "This works and allows basic configuration (see docs).\nI will follow up with allowing configuration for JVM metrics and for metrics filtering",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6df14b4b_5b5a6e0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Very good job Tony, please find some comments, mainly related to the question of why do we need such a complex configuration at start.\n\nAlso, I am missing at least *ONE* integration test, where we start the Gerrit daemon and use the plugin.",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee22afd5_8e2c5e43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Thanks for the review @luca.\nSure I can look at adding integration tests on top of the unit tests ones.\n\nP.S. fun fact: none of the metrics-reporter-* that exists at the moment has any test at all.",
      "parentUuid": "6df14b4b_5b5a6e0f",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18b6b95b_6da5af22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-07-14T15:01:49Z",
      "side": 1,
      "message": "If you want to run integration tests with a running instance of CW, I know there are docker images to run your AWS stack locally. This is a (bad) example: https://github.com/nearform/docker-cloudwatch\n\nI remember I have seen the official AWS version...I can have a better look if you think it is a viable solution.",
      "parentUuid": "ee22afd5_8e2c5e43",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d9fe67c_54d81924",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T15:21:31Z",
      "side": 1,
      "message": "Localstack would be the best candidate I think.\nit\u0027s also available via testcontainers.\n\nI am not sure we want to go as far as sending the metrics to cloudwatch. I would have the IT test running in dry-run mode to be honest. We leave the responsibility to POST to CW, the underlying library.\n\nWDYT?",
      "parentUuid": "18b6b95b_6da5af22",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43f240fb_33f2703f",
        "filename": "BUILD",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: empty line",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8b4dd6_6194cef8",
        "filename": "BUILD",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43f240fb_33f2703f",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a83de1d_68ebfbe4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchModule.java",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Why not simply use the LifecycleModule, which has been introduced to remove the listener-related boilerplate?",
      "range": {
        "startLine": 20,
        "startChar": 44,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c11ea20_0e284df5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchModule.java",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a83de1d_68ebfbe4",
      "range": {
        "startLine": 20,
        "startChar": 44,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "505a5ecd_7598b09d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "We typically use injection to instantiate objects, having then globalPluginConfig and gerritConfig being directly populated by Guice. Is there are particular reason why it shouldn\u0027t be used here?",
      "range": {
        "startLine": 48,
        "startChar": 13,
        "endLine": 48,
        "endChar": 47
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02dbea9d_d9338180",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Oh interesting: what\u0027s the benefit of injecting the configs over injecting the configFactory to generate them?",
      "parentUuid": "505a5ecd_7598b09d",
      "range": {
        "startLine": 48,
        "startChar": 13,
        "endLine": 48,
        "endChar": 47
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faab1f6a_e1956da7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T21:48:14Z",
      "side": 1,
      "message": "Less parameters to pass around. Also, you have increased decoupling, as you do not have to remember the dependencies of the GerritCloudwatchReporterConfig: you just inject it and leave to Guice to make its magic :-)",
      "parentUuid": "02dbea9d_d9338180",
      "range": {
        "startLine": 48,
        "startChar": 13,
        "endLine": 48,
        "endChar": 47
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "294a47ec_d36a9c1c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T08:39:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "faab1f6a_e1956da7",
      "range": {
        "startLine": 48,
        "startChar": 13,
        "endLine": 48,
        "endChar": 47
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c669d8f_0398d0e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "This doesn\u0027t look a canonical way of using the Optional\u003c\u003e IMHO: why not just using an ifPresent() instead?",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 52,
        "endChar": 46
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1360dba0_03eb88e1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Mutating a non final variable in a lambda is not allowed, the compiler complains with:\n\"Variable used in lambda expression should be final or effectively final\" [1]\n\nif you don\u0027t like the syntax I used, I could use a setter to achieve the same, or perhaps map() over the result and side-effect to mutate the variable.\n\nWDTY?\n\n[1]https://www.baeldung.com/java-lambda-effectively-final-local-variables",
      "parentUuid": "1c669d8f_0398d0e7",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 52,
        "endChar": 46
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4db5d41_997e4764",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T21:48:14Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "1360dba0_03eb88e1",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 52,
        "endChar": 46
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86d70f59_0a152b64",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 51
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8b01e8_eb841cf0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "86d70f59_0a152b64",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 51
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0071e3_0485cda8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "How can cloudWatchReporter be null? It is final and is initialised in the constructor at L76. The build() method returns a newly created object, which is always not null. If the object creation fails, it won\u0027t return null anyway.",
      "range": {
        "startLine": 81,
        "startChar": 8,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "496729dd_43b257e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7c0071e3_0485cda8",
      "range": {
        "startLine": 81,
        "startChar": 8,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2a2d56d_2268be5a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "If cloudWatchReporter would be null (but I doubt it), we should raise a runtime exception correct? The plugin won\u0027t work without it.",
      "range": {
        "startLine": 88,
        "startChar": 6,
        "endLine": 88,
        "endChar": 77
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151dbf9f_64d0b6f8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e2a2d56d_2268be5a",
      "range": {
        "startLine": 88,
        "startChar": 6,
        "endLine": 88,
        "endChar": 77
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "974272e1_ce0cf49b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "See the same comment as before: how can this be null?",
      "range": {
        "startLine": 94,
        "startChar": 8,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7c3abd_ea5c5c11",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporter.java",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "974272e1_ce0cf49b",
      "range": {
        "startLine": 94,
        "startChar": 8,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56aa6f34_90945abc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporterConfig.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "pluginConfig? This isn\u0027t really the Gerrit config, isn\u0027t it?",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 92
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39ca6633_5c7b0208",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporterConfig.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "I originally named it \"pluginConfig\" as you suggested, but then I found it difficult to distinguish from the \"globalPluginConfig\", which is the config obtained by looking at \"pluginName.config\".\n\n\"gerritConfig\" is the configuration obtained by calling getFromGerritConfig(), which is why I named it \"gerritConfig\".\n\nWhat do you suggest to name these? globalPluginConfig and pluginConfig?",
      "parentUuid": "56aa6f34_90945abc",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 92
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa4c39c9_ac1c4a47",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporterConfig.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T08:39:59Z",
      "side": 1,
      "message": "@luca, ping: Any advice on naming?",
      "parentUuid": "39ca6633_5c7b0208",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 92
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c489d9_890c9701",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/metricsreportercloudwatch/GerritCloudwatchReporterConfig.java",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T09:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa4c39c9_ac1c4a47",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 92
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c6275e_d5c35c40",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "It would be best NOT use the @PLUGIN@ expansion here: these are the instructions on how to build the plugin, so if you need to read them it means the plugin isn\u0027t built yet and isn\u0027t loaded, therefore the macro @PLUGIN@ won\u0027t be expanded :-(",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d897d645_6d15c9c3",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "ok gotcha. I will fix this.",
      "parentUuid": "a1c6275e_d5c35c40",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a76180_0c0eb4ac",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Not needed",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79db379c_395695f8",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "06a76180_0c0eb4ac",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3a29b28_6c8ffada",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "-sf",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "645662ce_c9c8da4c",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3a29b28_6c8ffada",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9c9fa3a_dab2c7d5",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "run?",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 10
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ede6ec_96897ce1",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a9c9fa3a_dab2c7d5",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 10
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8156740a_0468a617",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "bazelisk",
      "range": {
        "startLine": 18,
        "startChar": 2,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f45df66_eb85c9eb",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8156740a_0468a617",
      "range": {
        "startLine": 18,
        "startChar": 2,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b73d1f4f_b5c58712",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "bazelisk test plugins/metrics-reporter-cloudwatch/...",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 31
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6191e5d5_d29dcdfb",
        "filename": "src/main/resources/Documentation/build.md",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b73d1f4f_b5c58712",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 31
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62ac5d23_e7d04bd8",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Why two different places?",
      "range": {
        "startLine": 3,
        "startChar": 52,
        "endLine": 3,
        "endChar": 96
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "361d70f6_2919b903",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "The reason I am using two is to leverage secure.config.\n\n- gerrit.config to hold credentials (AFAIK, secure.config only gets merged to gerrit.config right?)\n- @PLUGIN@.config to hold metrics configuration\n\nUnless there any other way to securely store credentials in @PLUGIN@.config?",
      "parentUuid": "62ac5d23_e7d04bd8",
      "range": {
        "startLine": 3,
        "startChar": 52,
        "endLine": 3,
        "endChar": 96
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65ffd502_cf1fc305",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T21:48:14Z",
      "side": 1,
      "message": "Do we really need to store AWS credentials on secure.config?",
      "parentUuid": "361d70f6_2919b903",
      "range": {
        "startLine": 3,
        "startChar": 52,
        "endLine": 3,
        "endChar": 96
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98839e1d_5ddfc9e2",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T08:39:59Z",
      "side": 1,
      "message": "ideally yes, the secret access key should be treated as a password and it should be stored securely. And secure.config is where passwords are kept right?\n\nAnyway, as you requested we are not going to provide this functionality, so it doean\u0027t matter.",
      "parentUuid": "65ffd502_cf1fc305",
      "range": {
        "startLine": 3,
        "startChar": 52,
        "endLine": 3,
        "endChar": 96
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be73531b_34fb101b",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T09:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98839e1d_5ddfc9e2",
      "range": {
        "startLine": 3,
        "startChar": 52,
        "endLine": 3,
        "endChar": 96
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe1cd127_be90a3f3",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 9,
        "startChar": 80,
        "endLine": 9,
        "endChar": 111
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7ca9ebc_0d511edb",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 9,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fe1cd127_be90a3f3",
      "range": {
        "startLine": 9,
        "startChar": 80,
        "endLine": 9,
        "endChar": 111
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64ff2830_3f3c49fa",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 10,
        "startChar": 80,
        "endLine": 10,
        "endChar": 95
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2875541d_3e9d6690",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64ff2830_3f3c49fa",
      "range": {
        "startLine": 10,
        "startChar": 80,
        "endLine": 10,
        "endChar": 95
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbb775ca_37038fcc",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 11,
        "startChar": 80,
        "endLine": 11,
        "endChar": 102
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97810ac8_2c8defd1",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dbb775ca_37038fcc",
      "range": {
        "startLine": 11,
        "startChar": 80,
        "endLine": 11,
        "endChar": 102
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eded48a6_a0c0f4ea",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "We typically use the imperative, impersonal form. \"Find the ...\"",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52a41aae_9e2c19d4",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eded48a6_a0c0f4ea",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 7
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05b5b64d_a95df0e7",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "What would be the reason of NOT using the canonical way of defining the AWS credentials?",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7a6658e_ea1cd18d",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 17,
        "startChar": 80,
        "endLine": 17,
        "endChar": 98
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e2afc2_0a2a0093",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "The idea was not to make assumptions on the possible deployment environments and deployment methods different Gerrit users/companies might have.\n\nThe user running Gerrit might not have a home directory for ~/.aws/credentials for example (or perhaps the provisioning mechanism does not allow to store files outside gerrit directory).\nOr perhaps usage of environment variables is discouraged for some reason.\n\nI think these and others are the very reasons why setting static credentials is supported by the AWS SDK in the first place and I think this plugin should adhere to that apprroach.",
      "parentUuid": "05b5b64d_a95df0e7",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bac138_5002fd97",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T13:06:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b7a6658e_ea1cd18d",
      "range": {
        "startLine": 17,
        "startChar": 80,
        "endLine": 17,
        "endChar": 98
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27042354_d6e9e03d",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T21:48:14Z",
      "side": 1,
      "message": "Ack, but I would keep the first version of the plugin KISS: if someone would require to put the AWS credentials in secure.config, they could ask for it :-)\n\nI won\u0027t necessarily add that complexity if nobody requested it.\n\nP.S. I believe we are going to be the very first people who need this for the aws-gerrit project: do we need it?",
      "parentUuid": "f5e2afc2_0a2a0093",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e0a0394_dfa9f4b3",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T08:39:59Z",
      "side": 1,
      "message": "I will remove it.",
      "parentUuid": "27042354_d6e9e03d",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "499157fc_83c9fc83",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T09:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e0a0394_dfa9f4b3",
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e523be7_e84646db",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: wrap long line",
      "range": {
        "startLine": 19,
        "startChar": 80,
        "endLine": 19,
        "endChar": 90
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5260e2b_3e126021",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e523be7_e84646db",
      "range": {
        "startLine": 19,
        "startChar": 80,
        "endLine": 19,
        "endChar": 90
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e2bddb_45d507ca",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "This isn\u0027t the way AWS typically stores them: is that a typical AWS deployment scenario?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 33,
        "endChar": 3
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec3c5169_d2b56c84",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "see my previous replies",
      "parentUuid": "a8e2bddb_45d507ca",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 33,
        "endChar": 3
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06c9e6e9_a61be327",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-16T09:08:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec3c5169_d2b56c84",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 33,
        "endChar": 3
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b546ac7c_79c3b957",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Is it better to use INFO instead? So that they can be clearly visible on the error_log?",
      "range": {
        "startLine": 37,
        "startChar": 56,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "597e29cc_45b592bd",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "nit: space",
      "range": {
        "startLine": 37,
        "startChar": 118,
        "endLine": 37,
        "endChar": 120
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd388a01_18e4e211",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "When in dry mode, the underlying library [1] will output a WARN which ends up in the error_log\n\n[2020-07-13 18:47:20,645] [metrics-coda-hale-metrics-cloud-watch-reporter-1-thread-1] WARN  io.github.azagniotov.metrics.reporter.cloudwatch.CloudWatchReporter : ** Reporter is running in \u0027DRY RUN\u0027 mode **\n\n[1]https://github.com/azagniotov/codahale-aggregated-metrics-cloudwatch-reporter",
      "parentUuid": "b546ac7c_79c3b957",
      "range": {
        "startLine": 37,
        "startChar": 56,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d3a2aa9_13c4d19c",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "597e29cc_45b592bd",
      "range": {
        "startLine": 37,
        "startChar": 118,
        "endLine": 37,
        "endChar": 120
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc0880b3_fbea0b22",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "If someone forgets the dry-run activated and also does not raise the log level, then he will risk to put the plugin live without sending any metrics at all.\n\nWhy not just displaying the metrics at INFO level instead? It\u0027s just for the purpose of a dry-run and should never be used in a production environment anyway.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 46,
        "endChar": 3
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "287a54ab_fb9b89ac",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "See above, the library is already outputting a WARN, when in dry run mode.",
      "parentUuid": "fc0880b3_fbea0b22",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 46,
        "endChar": 3
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e14b2678_d2ec380d",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-14T11:16:13Z",
      "side": 1,
      "message": "Why the default has the form \u0027Ns\u0027 while the example has a different form? For the sake of extra clarity, we should keep consistency between the two.",
      "range": {
        "startLine": 57,
        "startChar": 15,
        "endLine": 57,
        "endChar": 24
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad608dd_0cf497c7",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 11
      },
      "lineNbr": 57,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-07-14T12:55:26Z",
      "side": 1,
      "message": "oh ok, I did it explicitly to highlight that *both* syntaxes are valid.\nBut I see your point, I\u0027ll amend that.",
      "parentUuid": "e14b2678_d2ec380d",
      "range": {
        "startLine": 57,
        "startChar": 15,
        "endLine": 57,
        "endChar": 24
      },
      "revId": "9f3f73e19cdec4089cb8d36fe30ce3fbb6558971",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}